{"version":3,"sources":["servermonitor.controller.js"],"names":[],"mappingsfile":"servermonitor.js","sourcesContent":["app.directive('dynchart', function() {\r\n    return {\r\n        scope: {\r\n            data: '='\r\n        },\r\n        link: function(scope, element) {\r\n            //var min = scope.dataMin;\r\n            //var max = scope.dataMax;\r\n            element.sparkline(scope.data, {\r\n                type: 'line',\r\n                width: '100%',\r\n                height: '50',\r\n                lineWidth: 2,\r\n                maxSpotColor: '#ff0000',\r\n                spotRadius: 3,\r\n                normalRangeMin: 0,\r\n                normalRangeMax: 80,\r\n                normalRangeColor: '#e5e5e5'\r\n            });\r\n        }\r\n    }\r\n});\r\n/*\r\n// CON NODEJS\r\napp.controller(\"servidorMonitorController\",\r\n    [\"$scope\",\"$http\", \"$interval\",\"toasty\",\r\n    function ($scope,$http, $interval, toasty) {\r\n\r\n    $scope.serverList = [];\r\n\r\n    var socket = io.connect('http://ARUSHAP34:8081');\r\n\r\n    socket.on('connect_error', function(err){\r\n        console.log(\"Error de conexion, servidor caido\",err);\r\n    });\r\n\r\n    socket.on('redisError', function(message){\r\n        console.log(message);\r\n    });\r\n\r\n    socket.on('disconnect', function () {\r\n        console.log(\"Conexion finalizada\");\r\n    });\r\n\r\n    socket.on('connect', function(){\r\n        console.log(\"Conectado\");\r\n        socket.emit('subscribe', 'servermonitor');\r\n    });\r\n\r\n    socket.on('subscribeResponse', function(message){\r\n        console.log(message);\r\n    });\r\n\r\n    socket.on('message', function(message){\r\n        var server = JSON.parse(message);\r\n\r\n        var found = false;\r\n        for(var i = 0; i < $scope.serverList.length; i++) {\r\n            if ($scope.serverList[i].nombre == server.nombre) {\r\n                $scope.serverList[i] = server;\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!found)\r\n        {\r\n            $scope.serverList.push(server);\r\n        }\r\n\r\n        $scope.$apply();\r\n\r\n    });\r\n}]);\r\n*/\r\n\r\n// CON ADONIS\r\napp.controller(\"servidorMonitorController\",\r\n[\"$scope\",\"$http\", \"$interval\",\"toasty\",\r\nfunction ($scope,$http, $interval, toasty) {\r\n    $scope.serverList = [];\r\n    $scope.nodejserror = true;\r\n\r\n    const io = ws('arushap34:3333', {});\r\n\r\n    const client = io.channel('servermonitor');\r\n    client.connect(function (error, connected) {\r\n        if (error) {\r\n            console.log(error);\r\n            $scope.nodejserror = true;\r\n            return\r\n        }\r\n\r\n        $scope.nodejserror = false;\r\n        console.log('ServerMonitor Connected');\r\n        client.emit('ServerMonitorSubscribe');\r\n    });\r\n\r\n    client.on('disconnect',function() {\r\n        console.log('ServerMonitor Disconnected');\r\n        $scope.nodejserror = true;\r\n\r\n        $scope.$apply();\r\n    });\r\n\r\n    client.on('ServerMonitorChannel', function (message) {\r\n        var server = JSON.parse(message);\r\n\r\n        var found = false;\r\n        for(var i = 0; i < $scope.serverList.length; i++) {\r\n            if ($scope.serverList[i].nombre == server.nombre) {\r\n                $scope.serverList[i] = server;\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!found) {\r\n            $scope.serverList.push(server);\r\n        }\r\n\r\n        $scope.$apply();\r\n    });\r\n}]);\r\n\r\n\r\n"]}